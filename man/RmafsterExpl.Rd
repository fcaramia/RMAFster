% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rmafster_expl.R
\name{RmafsterExpl}
\alias{RmafsterExpl}
\title{\lifecycle{experimental}}
\usage{
RmafsterExpl(
  rmaf_tbl,
  plot_by_str = "none",
  min_num_int = 20,
  print_plot_lgc = FALSE,
  return_plot_list = FALSE,
  remove_outliers = FALSE
)
}
\arguments{
\item{rmaf_tbl}{a data frame of rmafs.
The output from \code{RmafCalc()}}

\item{plot_by_str}{a character string.
Used to plot RMAFs by specific groups (maximum 12 values in group). Possible values are 'none' (default) or any column name from rmaf_df. E.g. 'symbol'.}

\item{min_num_int}{numeric.
The minimum number of mutations per group-value to be included in plots. E.g. if \code{plot_by_str} is \code{'chr'}, a chromosome is required to have \code{min_num_int} of mutations to be included in plot}

\item{print_plot_lgc}{logical.
If \code{TRUE} plot is shown}

\item{return_plot_list}{logical.
If \code{TRUE} a list of objects is returned}

\item{remove_outliers}{logical
If \code{TRUE} remove z1 ad z2 outliers}
}
\value{
a data frame copy of \code{rmaf_tbl} with 2 additional columns: \code{"z1"} and \code{"z2"}, which correspond to the calculated statistics. If \code{return_plot_list} == \code{TRUE} a list of objects is returned
}
\description{
explores RMAFs, the output of \code{RmafsterCalc()}, by calculating the z1 and z2 statistics and visualising using diverse plots.
}
\examples{
rmafs = data.frame(
            rmaf = c(sample(800:900,100,replace = TRUE)/1000,
                      sample(400:600,90,replace = TRUE)/1000,
                      sample(0:900,80,replace = TRUE)/1000,
                      sample(0:300,60,replace = TRUE)/1000,
                      sample(1:900,10,replace = TRUE)/1000
                     ),
            rna_purity = c(rep(.9,340)),
            dna_purity = c(rep(.8,340)),
            rna_dp = c(sample(20:500,340,replace = TRUE)),
            dna_dp = c(sample(100:500,340,replace = TRUE)),
            vaf = c(sample(50:800,340,replace = TRUE)/1000),
            symbol = c(rep('gene1',100),
                       rep('gene2',90),
                       rep('gene3',80),
                       rep('gene4',60),
                       rep('gene5',10)),
             stringsAsFactors = FALSE
               )

RmafsterExpl(
     rmaf_tbl = rmafs,
     plot_by_str = 'symbol',
     min_num_int = 20
)
}
